%matplotlib inline
from matplotlib import style
style.use('fivethirtyeight')
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import datetime as dt
# Python SQL toolkit and Object Relational Mapper
import sqlalchemy
from sqlalchemy.ext.automap import automap_base
from sqlalchemy.orm import Session
from sqlalchemy import create_engine, func
# Create engine using the `hawaii.sqlite` database file
engine = create_engine("sqlite:///Resources/hawaii.sqlite")

# Declare a Base using `automap_base()`
Base = automap_base()
Base.prepare(engine, reflect=True)

# Use the Base class to reflect the database tables
 # Use the Base class to reflect the database tables
class Station(Base):
    __tablename__ = 'station'
    id = Column(Integer, primary_key=True)
    station = Column(String(255))
    name = Column(String(255))
    latitude = Column(Integer)
    longitude = Column(Integer)  
    elevation = Column(Integer)

class Measurement(Base):
    __tablename__ = 'measurements'
    id = Column(Integer, primary_key=True)
    station = Column(String(255))
    date = Column(Date)
    prcp = Column(Integer)
    tobs = Column(Integer) 
# Print all of the classes mapped to the Base
print(Base.classes.keys())
# Assign the measurement class to a variable called `Measurement` and
# the station class to a variable called `Station`
Measurement = Base.classes.measurements
Station = Base.classes.station
station_query = session.query(Station).all()
measurement_query = session.query(Measurement).all()
# Create a session
session=Session(bind=engine)